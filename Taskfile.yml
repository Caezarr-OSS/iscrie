version: '3'

vars:
  APP_NAME: iscrie
  BUILD_DIR: dist

tasks:
  build:
    desc: "Build the application for the current OS/ARCH"
    cmds:
      - echo "Building {{.APP_NAME}} for {{OS}}/{{ARCH}}..."
      - go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-{{OS}}-{{ARCH}} ./cmd/main.go
    env:
      GOOS: "{{OS}}"
      GOARCH: "{{ARCH}}"

  release-local:
    desc: "Build a release binary for your current OS only"
    cmds:
      - task: build
      - echo "Binary built for {{OS}}/{{ARCH}} -> {{.BUILD_DIR}}/{{.APP_NAME}}-{{OS}}-{{ARCH}}"
    silent: false

  release:
    desc: "Build binaries for all supported platforms (GitHub Release)"
    cmds:
      - task: clean
      - mkdir -p {{.BUILD_DIR}}
      - task: build-linux
      - task: build-windows
      - task: build-macos
    silent: false

  build-linux:
    desc: "Build Linux binaries"
    cmds:
      - echo "Building for Linux..."
      - GOOS=linux GOARCH=amd64 go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-linux-amd64 ./cmd/main.go
      - GOOS=linux GOARCH=arm64 go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-linux-arm64 ./cmd/main.go

  build-windows:
    desc: "Build Windows binaries"
    cmds:
      - echo "Building for Windows..."
      - GOOS=windows GOARCH=amd64 go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-windows-amd64.exe ./cmd/main.go
      - GOOS=windows GOARCH=arm64 go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-windows-arm64.exe ./cmd/main.go

  build-macos:
    desc: "Build macOS binaries"
    cmds:
      - echo "Building for macOS..."
      - GOOS=darwin GOARCH=amd64 go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-darwin-amd64 ./cmd/main.go
      - GOOS=darwin GOARCH=arm64 go build -o {{.BUILD_DIR}}/{{.APP_NAME}}-darwin-arm64 ./cmd/main.go

  clean:
    desc: "Clean build directory"
    cmds:
      - echo "Cleaning build directory {{.BUILD_DIR}}..."
      - rm -rf {{.BUILD_DIR}}
